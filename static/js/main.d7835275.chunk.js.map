{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","name","email","TodoInfo","todo","removeTodo","title","completed","type","onClick","id","TodoList","preparedTodos","map","classNames","users","username","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","userId","item","find","person","App","state","addedTodos","titleError","nameError","maxTitleLength","addTodo","trim","length","match","setState","addedUser","newTodo","array","Math","max","todoId","slice","filter","this","onSubmit","event","preventDefault","placeholder","value","onChange","target","onFocus","error__show","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7835275.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <>\n    <td className=\"user user--name\">{`${user.name}`}</td>\n    <td className=\"user user--email\">{`${user.email}`}</td>\n  </>\n);\n","import React from 'react';\nimport { Todos } from '../types/Todos';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todos;\n  // eslint-disable-next-line\n  removeTodo: any,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo, removeTodo }) => (\n  <>\n    <td>\n      {todo.title}\n    </td>\n    <td>\n      {todo.completed ? 'completed' : 'in progress'}\n    </td>\n    {todo.user && <UserInfo user={todo.user} />}\n    <td>\n      <button\n        type=\"button\"\n        className=\"button__remove\"\n        onClick={() => removeTodo(todo.id)}\n      >\n        remove todo\n      </button>\n    </td>\n  </>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todos } from '../types/Todos';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport './TodoList.scss';\n\ntype Props = {\n  preparedTodos: Todos[],\n  // eslint-disable-next-line\n  removeTodo: any,\n};\n\nexport const TodoList: React.FC<Props> = ({ preparedTodos, removeTodo }) => (\n  <table>\n    <thead>\n      <tr>\n        <th>Todo</th>\n        <th>Status</th>\n        <th>Responsible person</th>\n        <th>Person&apos;s email</th>\n        <th>{}</th>\n      </tr>\n    </thead>\n    <tbody>\n      {preparedTodos.map(todo => (\n        <tr\n          key={todo.id}\n          className={classNames('todo__status', { 'todo__status--completed': todo.completed })}\n        >\n          <TodoInfo todo={todo} removeTodo={removeTodo} />\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Todos } from './components/types/Todos';\n\nimport users from './api/users';\nimport todos from './api/todos';\n\nconst preparedTodos = todos.map(item => {\n  return {\n    ...item,\n    user: users.find(person => item.userId === person.id) || null,\n  };\n});\n\ntype State = {\n  name: string;\n  title: string;\n  addedTodos: Todos[],\n  titleError: boolean;\n  nameError: boolean;\n  maxTitleLength: number;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    title: '',\n    name: '',\n    addedTodos: [...preparedTodos],\n    titleError: false,\n    nameError: false,\n    maxTitleLength: 20,\n  };\n\n  addTodo = () => {\n    if (!this.state.title.trim().length) {\n      this.setState(state => ({\n        titleError: !state.titleError,\n      }));\n\n      return;\n    }\n\n    if (this.state.title.match(/[^a-zA-Zа-яА-Я0-9]/)) {\n      this.setState(state => ({\n        titleError: !state.titleError,\n      }));\n    }\n\n    if (!this.state.name.length) {\n      this.setState(state => ({\n        nameError: !state.nameError,\n      }));\n\n      return;\n    }\n\n    const todoId = () => {\n      if (this.state.addedTodos.length === 0) {\n        return 1;\n      }\n\n      const array = this.state.addedTodos.map(item => item.id);\n      const maxNum = Math.max(...array);\n\n      return maxNum + 1;\n    };\n\n    const addedUser = users.find(user => user.name === this.state.name);\n    const newTodo = {\n      userId: addedUser?.id,\n      id: todoId(),\n      title: this.state.title.trim().slice(0, this.state.maxTitleLength),\n      completed: false,\n      user: addedUser || null,\n    };\n\n    this.setState(state => ({\n      addedTodos: [...state.addedTodos, newTodo],\n      title: '',\n      name: '',\n    }));\n  };\n\n  removeTodo = (id: number) => {\n    this.setState(state => ({\n      addedTodos: [...state.addedTodos].filter(item => item.id !== id),\n    }));\n  };\n\n  render() {\n    const { addedTodos } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Todos list</h1>\n\n        <TodoList preparedTodos={addedTodos} removeTodo={this.removeTodo} />\n\n        <h2>Here you can add you todo to the list</h2>\n\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n          }}\n        >\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Add todo\"\n            value={this.state.title}\n            onChange={(event) => {\n              this.setState({ title: event.target.value });\n            }}\n            onFocus={() => {\n              if (this.state.titleError) {\n                this.setState(state => ({\n                  titleError: !state.titleError,\n                }));\n              }\n            }}\n          />\n          <span\n            className={classNames('error', { error__show: this.state.titleError })}\n          >\n            You should add a todo using only letters and digits\n          </span>\n          <select\n            name=\"name\"\n            id=\"name\"\n            value={this.state.name}\n            onChange={(event) => {\n              this.setState({\n                name: event.target.value,\n              });\n            }}\n            onFocus={() => {\n              if (this.state.nameError) {\n                this.setState(state => ({\n                  nameError: !state.nameError,\n                }));\n              }\n            }}\n          >\n            <option value=\"\">Choose a responsible person</option>\n            {users.map(user => (\n              <option\n                key={user.name}\n                value={user.name}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          <span\n            className={classNames('error', { error__show: this.state.nameError })}\n          >\n            You should add user\n          </span>\n          <button\n            type=\"submit\"\n            onClick={this.addTodo}\n          >\n            Add todo to the list\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: true,\n  },\n];\n\nexport default todos;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}